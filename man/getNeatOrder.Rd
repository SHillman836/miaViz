% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getNeatOrder.R
\name{getNeatOrder}
\alias{getNeatOrder}
\alias{getNeatOrder,matrix-method}
\title{Sorting by radial theta angle}
\usage{
getNeatOrder(x, ...)

\S4method{getNeatOrder}{matrix}(
  x,
  dimensions = c(1, 2),
  centering.method = c("mean", "median", "none"),
  decreasing = FALSE,
  ...
)
}
\arguments{
\item{x}{A matrix containing the ordinated data to be sorted. Columns should represent the principal components (PCs) and rows should represent the entities being analyzed (e.g. features or samples).}

\item{...}{Additional arguments passed to other methods.}

\item{dimensions}{A \code{character} or \code{integer} vector of length 2 specifying the columns of the matrix to use for the X and Y coordinates.}

\item{centering.method}{A single \code{character} value specifying the method to center the data. Options are \code{mean}, \code{median}, or \code{none} if your data is already centered. (default: method = \code{mean})}

\item{decreasing}{A \code{boolean} that when \code{TRUE} sorts the rows in a descending order by radial theta angle. (default: descending = \code{FALSE})}
}
\value{
A \code{character} vector of row names in the sorted order.
}
\description{
\code{getNeatOrder} sorts already ordinated data by the radial theta angle.
This method is useful for organizing data points based on their angular
position in a 2D space, typically after an ordination technique such as PCA or NMDS
has been applied.

The function takes in a matrix of ordinated data, optionally
centers the data using specified methods (\code{mean}, \code{median}, or \code{none}), and then calculates
the angle (theta) for each point relative to the centroid. The data points are then
sorted based on these theta values in either ascending or descending order.

One significant application of this sorting method is in plotting heatmaps.
By using radial theta sorting, the relationships between data points can be preserved
according to the ordination method's spatial configuration, rather than relying on
hierarchical clustering, which may distort these relationships. This approach
allows for a more faithful representation of the data's intrinsic structure as captured
by the ordination process.
}
\details{
It's important to note that the sechm package does actually have the functionality for plotting a heatmap using this radial theta angle ordering, though only by using an MDS ordination.

This functionality can be found at:

\url{https://bioconductor.org/packages/3.18/bioc/vignettes/sechm/inst/doc/sechm.html#row-ordering}.

That being said, the \code{getNeatOrder} function is more modular and separate to the plotting, and
can be applied to any kind of ordinated data which can be valuable depending on the use case.
}
\examples{
## Load the required libraries and dataset
library(mia)
library(scater)
library(sechm)
data(peerj13075)

## Group data by taxonomic order
tse <- agglomerateByRank(peerj13075, rank = "order", onRankOnly = TRUE)

## Transform the samples into relative abundances
tse <- transformAssay(tse, assay.type = "counts", method="relabundance", MARGIN = "samples", name="relabundance")

## Transform the features (taxa) into zero mean, unit variance (z transformation)
tse <- transformAssay(tse, assay.type="relabundance", method="z", MARGIN = "features", name="z")

## Perform PCA using calculatePCA
pca_result <- calculatePCA(tse, ncomponents = 10, assay.type = "z")

## Add PCA results to the TreeSE object
reducedDim(tse, "PCA") <- pca_result

## Sort by radial theta and sort the original assay data
sorted_order <- getNeatOrder(reducedDim(tse, "PCA"), dimensions = c(1, 2), centering.method = "mean")
tse <- tse[, sorted_order]

## Create the heatmap with sechm whilst retaining this radial theta ordering
features <- rownames(assay(tse, "z"))
sechm_plot <- sechm(tse, assayName = "z", features=features, do.scale=FALSE, cluster_rows=FALSE, 
                    sortRowsOn = NULL)
}
\references{
The below paper outlines the NeatMap method in more detail:

Rajaram, S., Oono, Y. NeatMap - non-clustering heat map alternatives in R. BMC Bioinformatics 11, 45 (2010). https://doi.org/10.1186/1471-2105-11-45.

It can be found at:

\url{https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-11-45}.
}
